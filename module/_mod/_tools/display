#!/system/bin/sh

grep_prop() {
  local findfor="s/^$1=//p"
  cat $2 2>/dev/null | dos2unix | sed -n "$findfor" | head -n 1
}

deco(){
  #_deco_array
  _d_a=(🦄 🦋 🌹 🌷 💐 🌸 🌺 🌼 🍬 🍭 🍓 🍇 🍒 🎈 🎊 🎉 🎁 🎏 🎀 💮 💗 ❤️ 💛 🧡 💚 💙 💜 🖤 💕 💞 💓 🎄 💝 💘 💖)
  #_deco_array_length
  _d_a_l=${#_d_a[*]}
  _rnd=$((${RANDOM}%${_d_a_l}))
  _d=${_d_a[${_rnd}]}
}

if [[ $1 == "" ]]; then

  _default="/dev/tmp/module.prop"
  _tonew="/data/adb/modules_update"
  _tonew2=`ls -dt ${_tonew}/* | head -n 1` >/dev/null 2>&1
  after='module.prop'
  
elif [[ $1 == "-h" || $1 == "-help" ]]; then
  
  echo ''
  echo '---  _Display by Miseryset'
  echo ''
  echo '---  默认处理显示  module.prop  '
  echo '---  指定处理显示格式  _Display 绝对路径/module.prop 处理后的位置  '
  echo '---  若不指定  处理后的位置  ，则在原路径下生成  exe_module.prop  '
  echo '---  示例：'
  echo '---  _Display /dev/tmp/module.prop'
  echo '---  _Display /dev/tmp/module.prop /data/adb/modules_update/xxx  '
  echo ''
  
  exit
  
elif [[ $2 == "" ]]; then

  _default=$1
  _tonew2=${1%/*}
  after='exe_module.prop'
  
else

  _default=$1
  _tonew2=$2
  if [[ "${1%/*}" == "$2" ]]; then
  	after='exe_module.prop'
  else
  	after='module.prop'
  fi
  
fi

if [[ ! -e ${_default} ]]; then
  echo '---  未找到  module.prop  ，请检查  格式错误  或  文件不存在  '
  exit
fi


Mod_id=`grep_prop 'id' $_default`
Mod_name=`grep_prop 'name' $_default`
Mod_version=`grep_prop 'version' $_default`
Mod_versionCode=`grep_prop 'versionCode' $_default`
Mod_author=`grep_prop 'author' $_default`
Mod_description=`grep_prop 'description' $_default`
Mod_updateJson=`grep_prop 'updateJson' $_default`

deco
deco1="$_d"
deco
deco2="$_d"

echo "id=${Mod_id}
name=🎀${Mod_name}🎀(${Mod_id})
version=${Mod_version}
versionCode=${Mod_versionCode}
author=🌺${Mod_author}
description=${deco1} ${Mod_description} ${deco2}
updateJson=${Mod_updateJson}" >${_tonew2}/${after}
